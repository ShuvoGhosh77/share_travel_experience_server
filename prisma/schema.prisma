// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id            String         @id @default(uuid())
  RoomImage     String
  RoomNumber    String         @unique
  RoomType      RoomTypeStatus
  PricePerNight Int
  Description   String
  Capacity      String
  Status        RoomStatus     @default(Available)
  Facilities    String
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  reservations  Reservation[]

  @@map("rooms")
}

model Customer {
  id           String        @id @default(uuid())
  FullName     String
  Email        String        @unique
  Phone        String
  Address      String
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  reservations Reservation[]

  @@map("customer")
}

model Reservation {
  id              String   @id @default(uuid())
  CheckInDate     String
  CheckOutDate    String
  Adults          Int
  Children        Int
  TotalCost       Int
  TotalRoomNumber Int
  TotalMember     Int
  CustomerID      String
  customer        Customer @relation(fields: [CustomerID], references: [id])
  RoomNumberID    String
  RoomNumber      Room     @relation(fields: [RoomNumberID], references: [id])
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("reservation")
}

model Posts {
  id              String   @id @default(uuid())
  PostTitle       String
  PostDescription String
  PostImage       String
  PostDate        String
  AuthorImage     String
  AuthorName      String
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  Comment Comment[]

  @@map("posts")
}

model Comment {
  id         String  @id @default(uuid())
  Name       String
  Email      String
  Comments   String
  PostId     String
  Post       Posts   @relation(fields: [PostId], references: [id])
  adminReply String?

  @@map("comment")
}

model User {
  id       String @id @default(uuid())
  Email    String @unique
  Role     String
  password String

  @@map("user")
}

enum RoomStatus {
  Available
  Booked
}

enum RoomTypeStatus {
  Single
  Double
  Deluxe
  Honeymoon_Package
  Family_Package
}
